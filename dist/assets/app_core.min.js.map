{"version":3,"sources":["/src/app.js","/src/modules/Api/module.js","/src/modules/Api/services/api.service.js","/src/modules/Api/library/apiJson/apiJson.ts","/src/modules/Core/module.js","/src/modules/Core/controllers/home.controllers.js","/src/modules/Core/directives/footerbar.directive.js","/src/modules/Core/directives/headerbar.directive.js","/src/modules/Core/directives/sidebar.directive.js","/src/modules/Core/filters/moment.filters.js","/src/modules/Core/filters/split.filters.js"],"names":["$","ajax","url","type","dataType","then","angular","element","document","ready","bootstrap","html","module","config","$locationProvider","html5Mode","hashPrefix","factory","$log","$window","$injector","getSourceMappedStackTrace","exception","$q","get","$http","SMConsumer","window","sourceMap","SourceMapConsumer","cache","getMapForScript","promise","response","m","data","match","path","reject","stack","all","_","map","split","stackLine","prefix","line","col","pos","originalPositionFor","parseInt","column","mangledName","name","location","origin","source","when","lines","join","indexOf","error","jsonAPI","JsonAPI","JsonAPI.constructor","JsonAPI.example","$routeProvider","___","title","controller","templateUrl","otherwise","redirectTo","$scope","$rootScope","api","example","message","directive","scope","selected","template","link","getContentUrl","filter","dateString","format","moment","unix","secondDate","daysOne","diff","input","splitChar","splitIndex"],"mappings":"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","file":"app_core.min.js","sourcesContent":["/*global _*/\n\n// CONFIGURATION\n$.ajax({\n    url: 'configuration.json',\n    type: 'get',\n    dataType: 'json'\n}).then(function() {\n    angular.element(document).ready(function() {\n        angular.bootstrap(document, ['app']);\n    });\n}, function() {\n    $('body').html('Could not read configuration file');\n});\n\n// BOOT MODULE\nangular.module('app', [\n    /* [BEGIN INJECT: MODULES] */\n    'app.api',\n    'app.core',\n    /* [END INJECT: MODULES] */\n    'ngAnimate',\n    'ngRoute',\n    'ngResource'\n])\n\n.config(['$locationProvider',\n    function($locationProvider) {\n        $locationProvider.html5Mode(true).hashPrefix('!');\n    }\n])\n\n.factory('$exceptionHandler', ['$log', '$window', '$injector',\n    function($log, $window, $injector) {\n\n        var getSourceMappedStackTrace = function(exception) {\n\n            var $q = $injector.get('$q');\n            var $http = $injector.get('$http');\n            var SMConsumer = window.sourceMap.SourceMapConsumer;\n            var cache = {};\n\n            // Retrieve a SourceMap object for a minified script URL\n            var getMapForScript = function(url) {\n                if (cache[url]) {\n                    return cache[url];\n                } else {\n                    var promise = $http.get(url).then(function(response) {\n                        var m = response.data.match(/\\/\\/# sourceMappingURL=(.+\\.map)/);\n                        if (m) {\n                            var path = url.match(/^(.+)\\/[^/]+$/);\n                            path = path && path[1];\n                            return $http.get(path + '/' + m[1]).then(function(response) {\n                                return new SMConsumer(response.data);\n                            });\n                        } else {\n                            return $q.reject();\n                        }\n                    });\n                    cache[url] = promise;\n                    return promise;\n                }\n            };\n\n            if (exception.stack) { // not all browsers support stack traces\n                return $q.all(_.map(exception.stack.split(/\\n/), function(stackLine) {\n                    var match = stackLine.match(/^(.+)(http.+):(\\d+):(\\d+)/);\n                    if (match) {\n                        var prefix = match[1];\n                        var url = match[2];\n                        var line = match[3];\n                        var col = match[4];\n                        return getMapForScript(url).then(function(map) {\n                            var pos = map.originalPositionFor({\n                                line: parseInt(line, 10),\n                                column: parseInt(col, 10)\n                            });\n                            var mangledName = prefix.match(/\\s*(at)?\\s*(.*?)\\s*(\\(|@)/);\n                            mangledName = (mangledName && mangledName[2]) || '';\n                            return '    at ' + (pos.name ? pos.name : mangledName) + ' ' +\n                                $window.location.origin + pos.source + ':' + pos.line + ':' +\n                                pos.column;\n                        }, function() {\n                            return stackLine;\n                        });\n                    } else {\n                        return $q.when(stackLine);\n                    }\n                })).then(function(lines) {\n                    return lines.join('\\n');\n                });\n            } else {\n                return $q.when('');\n            }\n        };\n\n        return function(exception) {\n            if (exception.stack.indexOf('source-map.min.js') > -0) {\n                return;\n            } else {\n                getSourceMappedStackTrace(exception).then($log.error);\n            }\n        };\n    }]);\n","angular.module('app.api', [\n    'restangular'\n]);\n","/*global JsonAPI*/\n\nangular.module('app.api')\n\n    .factory('api', [\n        function() {\n            var jsonAPI = new JsonAPI();\n            return jsonAPI;\n        }]);\n","/// <reference path=\"reference.ts\"/>\n\nclass JsonAPI implements IApi {\n    language = 'English';\n\n    example(message:string) {\n        console.log('looks like it worked: ' + message);\n    }\n}","angular.module('app.core', [\n    'ngRoute'\n])\n\n    .config(['$routeProvider',\n        function($routeProvider) {\n\n            var ___ = 'views/Core/';\n\n            $routeProvider\n                .when('/', {\n                    title: 'Home',\n                    controller: 'HomeCtrl',\n                    templateUrl: ___ + 'home/home.html'\n                })\n                .when('/news', {\n                    title: 'News',\n                    controller: 'HomeCtrl',\n                    templateUrl: ___ + 'home/news.html'\n                })\n                .otherwise({\n                    redirectTo: '/'\n                });\n\n        }\n\n        ]);\n","angular.module('app.core')\n\n    .controller('HomeCtrl', ['$scope', '$rootScope', 'api',\n        function($scope, $rootScope, api) {\n            api.example('Joe Smith');\n            $rootScope.title = 'Home page';\n            $scope.message = 'Hello there';\n        }]);\n","angular.module('app.core')\n\n    .directive('footerBar', [\n        function() {\n            return {\n                scope: {\n                    selected: '@'\n                },\n                templateUrl: 'views/Core/partials/footerbar.html'\n            };\n        }\n    ]);\n","angular.module('app.core')\n\n    .directive('headerBar', [\n        function() {\n            return {\n                scope: {\n                    selected: '@'\n                },\n                templateUrl: 'views/Core/partials/headerbar.html'\n            };\n        }\n    ]);\n","angular.module('app.core')\n\n    .directive('sideBar', [\n        function() {\n            return {\n                scope: {\n                    selected: '=',\n                    template: '@'\n                },\n                link: function(scope) {\n                    scope.getContentUrl = function() {\n                        return (scope.template || 'views/Core/partials/sidebar.html');\n                    };\n                },\n                template: '<div ng-include=\"getContentUrl()\"></div>'\n            };\n        }]);\n","/*globals moment*/\n\nangular.module('app.core')\n\n    .filter('momentFormat', function() {\n        return function(dateString, format) {\n            return moment(new moment.unix(dateString)).format(format);\n        };\n    })\n\n    .filter('momentDiff', function() {\n        return function(dateString, secondDate) {\n            var daysOne = moment(new moment.unix(dateString)).diff(secondDate, 'days');\n            return daysOne;\n        };\n    });\n","angular.module('app.core')\n\n    .filter('split', function() {\n        return function(input, splitChar, splitIndex) {\n            return input.split(splitChar)[splitIndex];\n        };\n    });\n"],"sourceRoot":"/source/"}